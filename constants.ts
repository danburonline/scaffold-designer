// FIX: Import `TransformId` to fix 'Cannot find name' error.
import { Template, ScaffoldParams, TemplateId, TransformId } from './types';

export const TEMPLATES: Template[] = [
  { id: 'aligned-fibers', name: 'Aligned Fibers', description: 'Anisotropic: Parallel channels mimicking nerve bundles.' },
  { id: 'lamellar', name: 'Lamellar', description: 'Anisotropic: Parallel, thick layers or bands.'},
  { id: 'sinusoidal-fibers', name: 'Sinusoidal', description: 'Anisotropic: Parallel wavy fibers for gentle guidance.'},
  { id: 'wavy-channels', name: 'Wavy Channels', description: 'Anisotropic: Sinusoidal paths for complex guidance cues.' },
  { id: 'dendritic', name: 'Dendritic', description: 'Anisotropic: Tree-like branching structures for hierarchical guidance.' },
  { id: 'radial-spokes', name: 'Radial Spokes', description: 'Anisotropic: Guidance from a central point, like ganglia.' },
  { id: 'vortex', name: 'Vortex', description: 'Anisotropic: A swirling pattern for rotational guidance cues.'},
  { id: 'maze', name: 'Maze', description: 'Anisotropic: A labyrinth for complex neurite pathfinding studies.'},
  { id: 'honeycomb', name: 'Honeycomb', description: 'Isotropic: A hexagonal grid for uniform cell seeding.' },
  { id: 'porous-network', name: 'Porous Network', description: 'Isotropic: Random pores for general cell growth.' },
  { id: 'equiaxed', name: 'Equiaxed', description: 'Isotropic: Densely packed, roughly uniform circular grains.'},
  { id: 'cellular', name: 'Cellular', description: 'Isotropic: Irregular, packed cells mimicking natural tissue structure.'},
  { id: 'scherk-tower', name: 'Scherk Tower', description: 'Isotropic: A 2D projection of a minimal surface for complex 3D-like topography.'},
  { id: 'grid-gradient', name: 'Grid Gradient', description: 'A gradient of pore sizes across the scaffold.' },
  { id: 'concentric-rings', name: 'Concentric Rings', description: 'Circular guides for radial neurite outgrowth.'},
  { id: 'micropillar-array', name: 'Pillar Array', description: 'Topographical cues using micropillars.' },
  { id: 'crosshatch-grid', name: 'Crosshatch Grid', description: 'Orthogonal fiber grid for 2D guidance.'},
  { id: 'tunnels', name: 'Tunnels', description: 'Defined channels with solid walls.'},
  { id: 't-junction', name: 'T-Junction', description: 'Two chambers connected by a central tunnel.'},
];

const BASE_PARAMS = {
  transformId: 'none' as TransformId,
  transformStrength: 0.2,
  thickness: 100,
  width: 500,
  height: 500,
  // Set all template-specific params to a default
  fiberSpacing: 20,
  channelWidth: 20,
  waveAmplitude: 30,
  waveFrequency: 0.1,
  spokeCount: 12,
  poreSize: 30,
  poreSizeVariance: 0,
  porosity: 0.7,
  gradientStart: 10,
  gradientEnd: 50,
  ringSpacing: 40,
  ringWidth: 15,
  pillarDiameter: 20,
  pillarSpacing: 40,
  wallThickness: 20,
  lamellaeWidth: 20,
  branchAngle: 30,
  branchLengthFactor: 0.8,
  dendriteIterations: 4,
  branchThickness: 5,
  hexagonSize: 30,
  cellDensity: 0.001,
  vortexStrength: 5,
  spiralDensity: 3,
  mazePathWidth: 20,
  scherkFrequency: 5,
  junctionSeparation: 200,
  junctionHeight: 200,
  tunnelWidth: 25,
};

export const DEFAULT_PARAMS: Record<TemplateId, Omit<ScaffoldParams, 'id' | 'name'>> = {
  'aligned-fibers': {
    ...BASE_PARAMS,
    templateId: 'aligned-fibers',
    fiberSpacing: 25,
  },
  'wavy-channels': {
    ...BASE_PARAMS,
    templateId: 'wavy-channels',
    channelWidth: 20,
    waveAmplitude: 30,
    waveFrequency: 0.05,
    fiberSpacing: 50,
  },
  'radial-spokes': {
    ...BASE_PARAMS,
    templateId: 'radial-spokes',
    spokeCount: 16,
    channelWidth: 15,
  },
  'porous-network': {
    ...BASE_PARAMS,
    templateId: 'porous-network',
    poreSize: 40,
    porosity: 0.6,
  },
  'grid-gradient': {
    ...BASE_PARAMS,
    templateId: 'grid-gradient',
    gradientStart: 15,
    gradientEnd: 60,
  },
  'concentric-rings': {
    ...BASE_PARAMS,
    templateId: 'concentric-rings',
    ringSpacing: 40,
    ringWidth: 15,
  },
  'micropillar-array': {
    ...BASE_PARAMS,
    templateId: 'micropillar-array',
    pillarDiameter: 25,
    pillarSpacing: 50,
  },
  'crosshatch-grid': {
    ...BASE_PARAMS,
    templateId: 'crosshatch-grid',
    fiberSpacing: 40,
  },
  'tunnels': {
    ...BASE_PARAMS,
    templateId: 'tunnels',
    channelWidth: 30,
    wallThickness: 20,
  },
  'lamellar': {
    ...BASE_PARAMS,
    templateId: 'lamellar',
    fiberSpacing: 40,
    lamellaeWidth: 20,
  },
  'dendritic': {
    ...BASE_PARAMS,
    templateId: 'dendritic',
    branchAngle: 45,
    branchLengthFactor: 0.7,
    dendriteIterations: 5,
    branchThickness: 4,
  },
  'honeycomb': {
    ...BASE_PARAMS,
    templateId: 'honeycomb',
    hexagonSize: 35,
  },
  'equiaxed': {
    ...BASE_PARAMS,
    templateId: 'equiaxed',
    poreSize: 30,
    poreSizeVariance: 0.5,
    porosity: 0.5,
  },
  'cellular': {
    ...BASE_PARAMS,
    templateId: 'cellular',
    cellDensity: 0.0008,
  },
  'sinusoidal-fibers': {
    ...BASE_PARAMS,
    templateId: 'sinusoidal-fibers',
    fiberSpacing: 40,
    waveAmplitude: 20,
    waveFrequency: 0.05,
  },
  'vortex': {
    ...BASE_PARAMS,
    templateId: 'vortex',
    vortexStrength: 8,
    spiralDensity: 4,
  },
  'maze': {
    ...BASE_PARAMS,
    templateId: 'maze',
    mazePathWidth: 25,
  },
  'scherk-tower': {
    ...BASE_PARAMS,
    templateId: 'scherk-tower',
    scherkFrequency: 6,
  },
  't-junction': {
    ...BASE_PARAMS,
    templateId: 't-junction',
    junctionSeparation: 250,
    junctionHeight: 200,
    tunnelWidth: 30,
  },
};